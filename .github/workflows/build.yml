name: build

on: push

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get versions from source file
        run: |
          SW_VERSION=$(cat firmware/src/main.cpp  | grep '@version' | grep -oP '[0-9]+\.[0-9]+')
          SW_VERSION_TAG=$(cat firmware/src/main.cpp  | grep '@version' | grep -oP '[0-9]+\.[0-9]+' | tr "." "-")
          echo "VERSION=$SW_VERSION.${{github.run_id}}" >> $GITHUB_ENV
          echo "VERSION_TAG=$SW_VERSION_TAG.${{github.run_id}}" >> $GITHUB_ENV
          echo "VERSION found '$SW_VERSION' and TAG created '$SW_VERSION_TAG'"

      - name: Push version tag
        run: |
          tag=${{env.VERSION_TAG}}
          message='Automatic release creation tag ${{env.VERSION_TAG}}'
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "${tag}" -m "${message}"
          git push origin "${tag}"

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -U https://github.com/platformio/platformio/archive/develop.zip
      
      - name: Build firmware
        run: |
          pio run -d firmware

      - name: Release creation
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{env.VERSION}}"
          tag_name: ${{env.VERSION_TAG}}
          files: |
            firmware/.pio/build/d1_mini_lite/firmware.bin

      - name: Prepare Files
        run: |
          mkdir -p deploy
          cp firmware/.pio/build/d1_mini_lite/firmware.bin deploy/.
          cp flasher/index.html deploy/.
          echo "{ \"name\": \"Hack The Bom!\"," > deploy/manifest.json
          echo "  \"version\": \"${{env.VERSION}}\"," >> deploy/manifest.json
          echo "  \"new_install_prompt_erase\": true," >> deploy/manifest.json
          echo "  \"builds\": [ { \"chipFamily\": \"ESP8266\"," >> deploy/manifest.json
          echo "                  \"parts\": [ { \"path\": \"https://macsnoeren.github.io/hackthebom/firmware.bin\", \"offset\": 0 } ]" >> deploy/manifest.json
          echo "                }" >> deploy/manifest.json
          echo "              ]" >> deploy/manifest.json
          echo "}" >> deploy/manifest.json
          ls -l deploy
          cat deploy/manifest.json
          cat deploy/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deploy'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
